java/c++  try throw catch
python try raise except


wtf :: python does not support inline assignment   if(num=arg):  not supported in python , but supported in c

every module is an object and they have a special property __name__   
__name__ is the filename of the module , BUT IF THE PROGRAM IS CALLED AT FIRST WITHOUT IMPORTS , 
then __name__ is __main__


date types ::

Booleans
Numbers , integer -float-fraction-complex number

Strings
Bytes and byte arrays
Lists
Tuples
Sets
Dictionaries


Booleans can be treated as numbers  
True =1 , False = 0

"" ZERO VALUES ARE FALSE, NON ZERO ARE TRUE ""

True+True = 2

type()
and 
isinstance()

int() will truncate, not round


/   => always floating division
//  , for positive truncate  for negative rounding down


fractions module



Lists :::

lists ['a','b','c']

slicing of list , 

lists can be added by .

adding two lists , 
append method    append adds only 1 element to teh list , if a list is added , a list items stays as  1 element
insert method
extend mehtod    all memebers are added


list.count('item')
list.index('item')
'item' in list

to remove from a list

del list['index']
list.remove('value')
list.pop()
list.pop(4)

list.shift()


lists can also be used as boolen , any list with at least an element is evaluated as True

''' PYTHON 3 , DAY 3 , PAGE NO:- 70 chapter :- TUPLES
In lists, square bracket is used , whereas in teh case of tuple , parenthesis are used () 
tuples are immutable

Tuples are same as Lists BUT THEY CANNOT BE CHANGED , 
TUPLES HAVE NO APPEND,POP,REMOVE,ADD METHODS LIKE THAT OF LISTS ,, 
Tuples can be used for multiple assignments ,  if multiple  values are returned from a function , then they can will
be saved as  a tuple or individual parameters can be given to save them.. 
/// gotchaa , teh LHS variables should be equal to the number of values returned or should always be 1

SETS ARE ANOTHER DATA TYPES , their ordering is not determinable , union/intersection can be performed.
sets are implemented as class
sets can be created from list/tuple  with set(<name>) method.
{} doesnt create empty set but creates an empty dictionary.

items can be added to the sets with add or update method,
add takes a single item to add to the set , 
update , takes a single SET to add its elements to the set.

items can be removed by the methods discard , remove , pop
REMEMBER , sets have no specific ordering
